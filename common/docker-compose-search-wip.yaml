# common containers shared across all pega instances
# run $ docker-compose run pdm-install in order to install Pega Deployment Manager before everything else

version: '3.1'
services:
  swag:
    image: linuxserver/swag
    container_name: swag
    cap_add:
      - NET_ADMIN
    environment:
      - PUID=1001               #change PUID if needed
      - PGID=1002               #change PGID if needed
      - TZ=Europe/London        #change Time Zone if needed
      - URL=pega.example.com    #insert your domain name - yourdomain.url
      - VALIDATION=http
      - EMAIL=pega@example.com  #email for notifications
      - SUBDOMAINS=pega87-web,pega87-cdh,pega86-web,pega86-cdh,constellation87,constellation86,pdm,pega823-web,constellation823
    volumes:
      - ./appdata/swag:/config
    networks:
      - pega_common
    ports:
      - 443:443
      - 80:80
    restart: unless-stopped

  adminer:
    image: adminer
    networks:
      - pega_common
    restart: unless-stopped

  constellation88:
    image: ${CONSTELLATION_RUN_IMAGE_88}
    volumes:
      - ./ssl-cert:/host_folder
    networks:
      - pega_common
    command: debug
    restart: unless-stopped


  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - pega_common
    restart: unless-stopped

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - pega_common
    restart: unless-stopped
    
  es01:
    image: elasticsearch:7.16.3
    container_name: es01
    environment:
      - node.name=es01
      - cluster.name=es-docker-cluster
      - cluster.initial_master_nodes=es01
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - srs-data:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
    networks:
      - pega_common
    
  pega-srs:
    image: ${SEARCHANDREPORT_RUN_IMAGE}
    depends_on:
      - es01    
    container_name: pega-srs
     environment:
       ELASTICSEARCH_HOST: es01
       ELASTICSEARCH_PORT: 9200
       ELASTICSEARCH_PROTO: http
    ports:
      #- "9200:9200" # Elasticsearch port
      - "9300:9300" # Elasticsearch transport port
    environment:
      - discovery.type=single-node
    networks:
      - pega_common
    volumes:
      - srs-data:/usr/share/elasticsearch/data

networks:
  pega_common:
    name: pega_common

volumes:
  srs-data: